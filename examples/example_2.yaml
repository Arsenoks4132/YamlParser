# Основная конфигурация системы управления конфигурациями
system:
  name: "Configuration Management System"
  version: "2.5.0"
  environment: "production"
  maintainers:
    - name: "John Doe"
      email: "john.doe@example.com"
    - name: "Jane Smith"
      email: "jane.smith@example.com"

# Настройки окружений
environments:
  - name: "development"
    description: "Development environment for testing and building features"
    servers:
      - hostname: "dev-server-01"
        ip: "192.168.1.101"
        role: "application-server"
      - hostname: "dev-server-02"
        ip: "192.168.1.102"
        role: "database-server"
  - name: "staging"
    description: "Staging environment for testing before production"
    servers:
      - hostname: "staging-server-01"
        ip: "192.168.1.201"
        role: "application-server"
      - hostname: "staging-server-02"
        ip: "192.168.1.202"
        role: "database-server"
  - name: "production"
    description: "Production environment"
    servers:
      - hostname: "prod-server-01"
        ip: "10.0.0.1"
        role: "application-server"
      - hostname: "prod-server-02"
        ip: "10.0.0.2"
        role: "database-server"

# Определение ролей для серверов
roles:
  application-server:
    description: "Handles all the application logic and API requests"
    services:
      - name: "nginx"
        version: "1.19.0"
        config_path: "/etc/nginx/nginx.conf"
      - name: "app_service"
        version: "2.4.5"
        config_path: "/etc/app/app_service.conf"
  database-server:
    description: "Handles database operations and storage"
    services:
      - name: "postgresql"
        version: "13.3"
        config_path: "/etc/postgresql/postgresql.conf"
      - name: "redis"
        version: "6.2.4"
        config_path: "/etc/redis/redis.conf"

# Политики безопасности
security_policies:
  ssh:
    enforce_strict_key_auth: true
    allow_root_login: false
    idle_timeout: 300
    allow_users:
      - "deploy"
      - "admin"
  firewall:
    default_policy: "deny"
    rules:
      - port: 22
        protocol: "tcp"
        action: "allow"
      - port: 80
        protocol: "tcp"
        action: "allow"
      - port: 443
        protocol: "tcp"
        action: "allow"

# Версионный контроль конфигурации
version_control:
  repository: "git@example.com:config-management/config.git"
  branch: "main"
  tags:
    - "v2.5.0"
    - "v2.4.0"
    - "v2.3.0"
  commit_history:
    - commit: "a1b2c3d"
      author: "Jane Smith"
      message: "Updated nginx configuration for security patch"
      date: "2024-09-10"
    - commit: "e4f5g6h"
      author: "John Doe"
      message: "Added staging environment configuration"
      date: "2024-08-15"

# Настройки автоматического развертывания
deployment:
  strategy: "blue-green"
  steps:
    - step: "Build"
      tool: "Docker"
      description: "Build the application container"
    - step: "Test"
      tool: "Jenkins"
      description: "Run unit and integration tests"
    - step: "Deploy to Staging"
      tool: "Ansible"
      description: "Deploy application to staging environment"
    - step: "Smoke Test"
      tool: "CustomScript"
      description: "Run smoke tests on staging"
    - step: "Deploy to Production"
      tool: "Ansible"
      description: "Deploy application to production environment"

# Настройки мониторинга и логирования
monitoring:
  tools:
    - name: "Prometheus"
      version: "2.27.1"
      config_path: "/etc/prometheus/prometheus.yml"
    - name: "Grafana"
      version: "8.1.0"
      config_path: "/etc/grafana/grafana.ini"
  alerts:
    - name: "High CPU Usage"
      threshold: 90
      action: "Send Email"
      recipients:
        - "admin@example.com"
    - name: "Low Disk Space"
      threshold: 10
      action: "Send Email"
      recipients:
        - "admin@example.com"
    - name: "Service Down"
      services_monitored: 
        - "nginx"
        - "postgresql"
      action: "Send SMS"
      recipients:
        - "+1234567890"

# Резервное копирование данных
backup:
  schedules:
    - name: "Daily Backup"
      time: "02:00"
      target: "production"
      include:
        - "/var/lib/postgresql"
        - "/etc/nginx"
      retention_days: 30
    - name: "Weekly Backup"
      time: "Sunday 04:00"
      target: "production"
      include:
        - "/var/lib/postgresql"
        - "/etc/nginx"
      retention_days: 90

# Настройки восстановления после сбоев
disaster_recovery:
  description: "Plan for recovering from a system outage"
  recovery_steps:
    - step: "Assess Damage"
      responsible: "Admin Team"
      tools: 
        - "Nagios"
    - step: "Restore Backups"
      responsible: "Backup Team"
      tools:
        - "CustomScript"
    - step: "Verify System Health"
      responsible: "DevOps Team"
      tools: 
        - "Prometheus"
        - "Grafana"
